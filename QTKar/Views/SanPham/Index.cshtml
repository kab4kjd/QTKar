
@(Html.Kendo().Grid<QTKar.Models.SanPham>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.MaHang).Width(50);
          columns.Bound(c => c.MaNhom).ClientTemplate("#=MaNhom.TenNhom#");
          columns.Bound(c => c.TenHang);
          columns.Bound(c => c.GiaBan);
          columns.Command(command => command.Destroy());
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create();
          toolbar.Save();
      })
      .Editable(editable => editable.Mode(GridEditMode.InCell))
      .Selectable(selectable =>
      {
          selectable.Mode(GridSelectionMode.Single);
          selectable.Type(GridSelectionType.Row);
      })
      .Scrollable()
      .HtmlAttributes(new { style = "height:550px;" })
      .DataSource(dataSource => dataSource
          .Ajax()
          .Batch(true)
          .ServerOperation(false)
          .Model(model =>
          {
              model.Id(p => p.MaHang);
              model.Field(p => p.MaHang).Editable(false);
              model.Field(p => p.MaNhom).DefaultValue(ViewData["MaNhom"] as QTKar.Models.Nhom);

          })
          .Read(read => read.Action("SanPhams_Read", "SanPham"))
          .Aggregates(aggregates =>
          {
              //aggregates.Add(product => product.UnitsInStock).Min().Max().Count();
              //aggregates.Add(product => product.UnitsOnOrder).Average();
              //aggregates.Add(product => product.ProductName).Count();
              aggregates.Add(product => product.GiaBan).Sum();
          })
          .Create(create => create.Action("SanPhams_Create", "SanPham"))
          .Update(update => update.Action("SanPhams_Update", "SanPham"))
          .Destroy(destroy => destroy.Action("SanPhams_Destroy", "SanPham"))
      )
)

